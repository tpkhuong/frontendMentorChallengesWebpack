// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  createdAt     DateTime  @default(now())
  emailVerified DateTime? @map("verifiedAt")
  boards        Board[]
  sessions      Session[]

  @@map("users")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime @map("expireAt")
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime @map("expiresAt")

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Board {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  index      Int
  isSelected Boolean
  userId     String  @db.ObjectId
  user       User    @relation(fields: [userId], references: [id])

  columns Column[]

  @@map("boards")
}

model Column {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  index   Int
  boardId String @db.ObjectId
  board   Board  @relation(fields: [boardId], references: [id])
  tasks   Task[]

  @@map("columns")
}

model Task {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  status   String
  index    Int
  columnId String @db.ObjectId
  column   Column @relation(fields: [columnId], references: [id])

  subtasks Subtask[]

  @@map("tasks")
}

model Subtask {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  isCompleted Boolean
  index       Int
  taskId      String  @db.ObjectId
  task        Task    @relation(fields: [taskId], references: [id])

  @@map("subtasks")
}
